
**CGROUPS:**

- ResponsÃ¡veis pelo isolamento de recursos. (CPU, MEN, etcâ€¦).

### Name Spaces:

- Fazem o isolamentos de usuÃ¡rios, pontos de montagens etc..

### Container-Engine:

- ResponsÃ¡vel para que o container tenha rede, storage. Ele se comunica com o **Container-RunTime** para realizar suas tarefas.

### Container-Runtime:

> Tipos de container runtime:
> 

**Baixo NÃ­vel:  Executados diretamente pelo Kernel.**

Os Container RinTime Low-level sÃ£o executados diretamente pelo Kernel.

- **RunC**
- **crun**
- **Runsc**

**Alto NÃ­vel: SÃ£o executados por um container-engine.**

JÃ¡ os High-Level, sÃ£o executados pelos **Containers-Engine.**

- **Containerd** - [ Ã‰ o container RunTimer do Dokcer ].
- **Podman**
- **CRI-O**

**SendBox:**  TambÃ©m sÃ£o containers-RunTimer, mas no caso desses eles sÃ£o executados por um Container-enginer. Ele Ã© responsavel por executar containers de forma segura em [unikernels].

> **OCI**
> 

<aside>
ðŸ’¡ **Open Container Iniciative**

</aside>

## Arquitetura do K8S

- Componentes

> **Control Plane**
> 

**etcd: Tem como funÄ‡Ã£o guardar todo o estado atual do Cluster. Roda sempre por padrÃ£o no control-plane**

**kube api-server:**  Ã‰ o unico que se comunica com o **etcd.** No cluster  ele se comunica com todos os componentes. Tem como funÄ‡Ã£o monitorar e centralizar tudo que estÃ¡ acontecendo dentro do cluster para guardar dentro do **etcd**

**kube-scheduler:**  Ã‰ ele quem decidi onde sera criado os volumes e os Pods.

**kube controler-maneger:**   Gerenciamento dos controladores.

> **Workes**
> 

K**ubelet:**

**KubeProxy**

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/547dcc8a-71b1-4e68-b340-8151d3f4b800/Untitled.png)

> **Portas necessaria para o Control-plane:**
> 

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/148bafdd-b93f-401c-98cb-d228f493df0b/Untitled.png)

---

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b637d2be-3de1-4b86-9e15-c21571513c36/Untitled.png)
